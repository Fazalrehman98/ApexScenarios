trigger OpportunityTrigger on Opportunity (after insert, after Update, after delete, after Undelete) {
    if(Trigger.isAfter){
        if(Trigger.isInsert){
            UpdateTopOpportunityOnAccount.updateAmountOnAccountOnInsert(trigger.new, null);
        }
        if(Trigger.isUpdate){
            UpdateTopOpportunityOnAccount.updateAmountOnAccountOnInsert(trigger.new, trigger.oldMap);
            
            
        }
        if(Trigger.isDelete){
			OpportunityTriggerHandler.addEvent(trigger.old, null);
            UpdateTopOpportunityOnAccount.updateAmountOnAccountOnInsert(trigger.old,null);
        }
        
        if(Trigger.isUndelete){
			OpportunityTriggerHandler.addEvent(trigger.old, null);
            UpdateTopOpportunityOnAccount.updateAmountOnAccountOnInsert(trigger.new,null);
        }
    }
}

///// Handler class

public class UpdateTopOpportunityOnAccount {
    
    Public static void updateAmountOnAccountOnInsert(List<Opportunity> oppList, map<id, Opportunity> oldOpp){
        set<Id> accId = new set<Id>();
        for(Opportunity opp: oppList){
            if((opp.StageName =='Closed Won' && opp.Amount != null && oldOpp == null) || (oldOpp !=null && oldOpp.get(opp.Id).StageName != opp.StageName && opp.StageName =='Closed Won' && opp.Amount != null)){
                accId.add(opp.AccountId);
            }else{
                return ;
            }
        }
        map<Id, List<Opportunity>> accountWithOpp = new Map<id, List<Opportunity>>();
        for(Account acc: [SELECT Id, (SELECT Id, Amount,AccountId FROM Opportunities WHERE StageName ='Closed WON' Order BY Amount Desc LIMIT 3) FROM Account WHERE ID IN: accId]){
            for(Opportunity opp: acc.opportunities){
                 accountWithOpp.put(acc.Id, acc.Opportunities);
        }
            	if(accountWithOpp.isEmpty()) return; 
        }
        
         List<Account> accountsToUpdate = new List<Account>();
        for(Id accountId : accountWithOpp.keySet()) {
            List<Opportunity> topOpps = accountWithOpp.get(accountId);
            Account acc = new Account(Id = accountId);
            
            acc.Top1_Won__c = (topOpps.size() > 0) ? topOpps[0].Amount : null;
            acc.Top2_Won__c = (topOpps.size() > 1) ? topOpps[1].Amount : null;
            acc.Top3_Won__c = (topOpps.size() > 2) ? topOpps[2].Amount : null;
            
            accountsToUpdate.add(acc);
        }

        if(!accountsToUpdate.isEmpty()) {
            update accountsToUpdate;
        }
    }

}
